{"version":3,"sources":["webpack:///./src/components/Slider/Slider.jsx","webpack:///./src/components/Slider/index.js","webpack:///./src/templates/index/page.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/components/Post/PostSmall.jsx","webpack:///./src/components/Post/PostBig.jsx","webpack:///./src/components/Post/PostCard.jsx","webpack:///./src/components/Post/index.js"],"names":["Slider","props","_this","_PureComponent","call","this","_createTimer","_removeTimer","timer","setInterval","_tiktok","interval","clearInterval","t","curr","state","len","list","length","undefined","setState","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","_this2","react_default","a","createElement","className","style","width","transform","map","edge","key","pick","gatsby_browser_entry","to","gatsby_image_default","fluid","alt","index","cls","onClick","PureComponent","propTypes","auto","PropTypes","bool","number","arrayOf","object","defaultProps","AuthorList","_ref","cover","author","id","src","nickname","slogan","SeriesList","_ref2","series","name","description","TagList","_ref3","tag","__webpack_exports__","_ref4","data","pageContext","posts","x","node","authors","tags","Layout","prev","components_Slider","slice","react_media","query","matches","common","Line","Post","post","seriesCover","authorsCover","Pagination","offset","top","bottom","marginRight","next","onPrev","onNext","PostSmall","PostBig","PostCard","__webpack_require__","d","Post_PostSmall","Post_PostBig","Post_PostCard"],"mappings":"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","file":"component---src-templates-index-page-js-9dfac9bf909115e987bb.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport cls from 'classnames';\nimport pick from 'utils/pick';\n\nimport './style.less';\n\nclass Slider extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      curr: 0,\n    };\n    this.timer = null;\n  }\n\n  componentDidMount() {\n    this._createTimer();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.list.length !== this.props.list.length) {\n      this._createTimer();\n    }\n  }\n\n  componentWillUnmount() {\n    this._removeTimer();\n  }\n\n  _createTimer = () => {\n    this._removeTimer();\n\n    this.timer = setInterval(this._tiktok, this.props.interval);\n  };\n\n  _removeTimer = () => {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  };\n\n  _tiktok = t => {\n    const { curr } = this.state;\n    const { list } = this.props;\n    const len = list.length;\n\n    if (t !== undefined && t === curr) return;\n\n    this._createTimer();\n\n    this.setState({\n      curr: t !== undefined ? t : (curr + 1) % len,\n    });\n  };\n\n  render() {\n    const { curr } = this.state;\n    const { list } = this.props;\n\n    return (\n      <div className=\"slider\">\n        <div\n          className=\"slider__slides\"\n          style={{\n            width: `${list.length * 100}%`,\n            transform: `translateX(-${(100 / list.length) * curr}%)`,\n          }}\n        >\n          {list.map(edge => (\n            <div\n              key={pick(edge, 'id')}\n              className=\"slider__slide__wrapper\"\n              style={{ width: `${100 / list.length}%` }}\n            >\n              <div className=\"slider__slide\">\n                <Link to={pick(edge, 'fields.slug')}>\n                  <Img\n                    fluid={pick(\n                      edge,\n                      'frontmatter.cover.childImageSharp.fluid'\n                    )}\n                    alt={pick(edge, 'frontmatter.title')}\n                  />\n                </Link>\n              </div>\n              <div className=\"slider__slide__title\">\n                <Link to={pick(edge, 'fields.slug')}>\n                  {pick(edge, 'frontmatter.title')}\n                </Link>\n              </div>\n            </div>\n          ))}\n        </div>\n        <ul className=\"slider__dots\">\n          {list.map((edge, index) => (\n            <li\n              key={pick(edge, 'id')}\n              className={cls([\n                'slider__dot',\n                index === curr && 'slider__dot--active',\n              ])}\n              onClick={() => this._tiktok(index)}\n            />\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nSlider.propTypes = {\n  auto: PropTypes.bool,\n  interval: PropTypes.number,\n  list: PropTypes.arrayOf(PropTypes.object),\n};\n\nSlider.defaultProps = {\n  auto: true,\n  interval: 7000,\n  list: [],\n};\n\nexport default Slider;\n","import Slider from './Slider.jsx';\n\nexport default Slider;\n","import React from 'react';\nimport Media from 'react-media';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\n\nimport Layout from 'components/Layout';\nimport Slider from 'components/Slider';\nimport Pagination from 'components/Pagination';\nimport { PostBig } from 'components/Post';\nimport { Parallel } from 'components/common';\nimport pick from 'utils/pick';\n\nimport './style.less';\n\nexport function AuthorList({ list, cover }) {\n  return (\n    <div className=\"index-page__author-list\">\n      <div className=\"index-page__author-list__header\">\n        <div className=\"index-page__author-list__title\">Popular Authors</div>\n        <Img\n          className=\"index-page__author-list__cover\"\n          fluid={pick(cover, 'childImageSharp.fluid')}\n        />\n      </div>\n      <div className=\"index-page__author-list__content\">\n        {list.map(author => (\n          <Link key={author.id} to={`/author/${author.id}`}>\n            <div className=\"author\">\n              <img\n                className=\"author__avatar\"\n                src={pick(author, 'avatar.childImageSharp.resize.src')}\n                alt={author.id}\n              />\n              <div className=\"author__wrapper\">\n                <div className=\"author__title\">{author.nickname}</div>\n                <div className=\"author__desc\">{author.slogan}</div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function SeriesList({ list, cover }) {\n  return (\n    <div className=\"index-page__series-list\">\n      <div className=\"index-page__series-list__header\">\n        <div className=\"index-page__series-list__title\">Popular Series</div>\n        <Img\n          className=\"index-page__series-list__cover\"\n          fluid={pick(cover, 'childImageSharp.fluid')}\n        />\n      </div>\n      <div className=\"index-page__series-list__content\">\n        {list.map(series => (\n          <Link key={series.id} to={`/series/${series.id}`}>\n            <div className=\"series\">\n              <img\n                className=\"series__cover\"\n                src={pick(series, 'cover.childImageSharp.resize.src')}\n                alt={series.id}\n              />\n              <div className=\"series__wrapper\">\n                <div className=\"series__title\">{series.name}</div>\n                <div className=\"series__desc\">{series.description}</div>\n              </div>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport function TagList({ list }) {\n  return (\n    <div className=\"index-page__tag-list\">\n      <div className=\"index-page__tag-list__header\">Popular Tags</div>\n      <div className=\"index-page__tag-list__content\">\n        {list.map((tag, index) => (\n          <div className=\"tag\" key={tag.id}>\n            <div className=\"index\">\n              {index + 1 < 10 ? `0${index + 1}` : index + 1}\n            </div>\n            <div className=\"title\">\n              <Link to={`/tag/${tag.id}`}>{tag.name}</Link>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ({ data, pageContext }) => {\n  const posts = (pick(data, 'posts.edges') || []).map(x => x.node) || [];\n  const series = (pick(data, 'series.edges') || []).map(x => x.node) || [];\n  const authors = (pick(data, 'authors.edges') || []).map(x => x.node) || [];\n  const tags = (pick(data, 'tags.edges') || []).map(x => x.node) || [];\n\n  return (\n    <Layout className=\"index-page\">\n      {!pageContext.prev && <Slider list={posts.slice(0, 1)} />}\n      <div className=\"index-page__separator\" />\n      <div className=\"index-page__title\">FEATURED</div>\n      <Media query=\"(max-width: 780px)\">\n        {matches =>\n          matches ? (\n            <Parallel className=\"index-page__parallel\">\n              <Parallel.Line style={{ width: '100%' }}>\n                {posts.slice(1).map(node => (\n                  <PostBig key={node.id} post={node} />\n                ))}\n                <SeriesList list={series} cover={data.seriesCover} />\n                <TagList list={tags} />\n                <AuthorList list={authors} cover={data.authorsCover} />\n                <Pagination {...pageContext} />\n              </Parallel.Line>\n            </Parallel>\n          ) : (\n            <Parallel\n              className=\"index-page__parallel\"\n              offset={{ top: 65, bottom: 0 }}\n            >\n              <Parallel.Line style={{ marginRight: 64 }}>\n                {posts.slice(1).map(node => (\n                  <PostBig key={node.id} post={node} />\n                ))}\n                <Pagination {...pageContext} />\n              </Parallel.Line>\n              <Parallel.Line width={328}>\n                <SeriesList list={series} cover={data.seriesCover} />\n                <TagList list={tags} />\n                <AuthorList list={authors} cover={data.authorsCover} />\n              </Parallel.Line>\n            </Parallel>\n          )\n        }\n      </Media>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query IndexPageQuery(\n    $posts: [String]\n    $tags: [String]\n    $series: [String]\n    $authors: [String]\n  ) {\n    posts: allMarkdownRemark(\n      filter: { id: { in: $posts } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          ...PostBig\n        }\n      }\n    }\n    tags: allTagJson(filter: { id: { in: $tags } }) {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    series: allSeriesJson(filter: { id: { in: $series } }) {\n      edges {\n        node {\n          id\n          name\n          description\n          cover {\n            ... on File {\n              childImageSharp {\n                resize(width: 200, height: 265, cropFocus: CENTER) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    seriesCover: file(relativePath: { eq: \"cover1.png\" }) {\n      ... on File {\n        childImageSharp {\n          fluid(\n            maxHeight: 118\n            cropFocus: CENTER\n            traceSVG: { color: \"#d7efee\" }\n            duotone: { highlight: \"#d7efee\", shadow: \"#192550\" }\n          ) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n    }\n    authors: allAuthorJson(filter: { id: { in: $authors } }) {\n      edges {\n        node {\n          id\n          nickname\n          slogan\n          avatar {\n            ... on File {\n              childImageSharp {\n                resize(width: 80, height: 80, cropFocus: CENTER) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    authorsCover: file(relativePath: { eq: \"cover2.png\" }) {\n      ... on File {\n        childImageSharp {\n          fluid(\n            maxHeight: 118\n            cropFocus: CENTER\n            traceSVG: { color: \"#D1EFFB\" }\n            duotone: { highlight: \"#0ec4f1\", shadow: \"#192550\", opacity: 25 }\n          ) {\n            ...GatsbyImageSharpFluid_tracedSVG\n          }\n        }\n      }\n    }\n  }\n`;\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './style.less';\n\nexport default ({ next, prev, onPrev, onNext }) =>\n  (prev || next) && (\n    <div className=\"pagination\">\n      <div className=\"pagination__prev\">\n        {prev && (\n          <Link to={prev} onClick={onPrev}>\n            PREV\n          </Link>\n        )}\n      </div>\n      <div className=\"pagination__next\">\n        {next && (\n          <Link to={next} onClick={onNext}>\n            NEXT\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport pick from 'utils/pick';\n\nimport './post-small.less';\nimport Img from 'gatsby-image';\n\nconst PostSmall = ({ post }) => (\n  <div className=\"post-small\">\n    <div className=\"post-small__cover\">\n      <Link to={pick(post, 'fields.slug')}>\n        <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      </Link>\n    </div>\n    <div className=\"post-small__content\">\n      <Link className=\"post-small__content__top\" to={pick(post, 'fields.slug')}>\n        <div className=\"post-small__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-small__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n      <div className=\"post-small__content__bottom\">\n        <div className=\"post-small__author\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            {pick(post, 'frontmatter.author.nickname')}\n          </Link>\n        </div>\n        <div className=\"post-small__external\">\n          <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n          <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostSmall.propTypes = {\n  post: PropTypes.object,\n};\n\nPostSmall.defaultProps = {\n  post: {},\n};\n\nexport const postSmallQuery = graphql`\n  fragment PostSmall on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 500, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n      }\n    }\n  }\n`;\n\nexport default PostSmall;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport pick from 'utils/pick';\n\nimport './post-big.less';\n\nconst PostBig = ({ post }) => (\n  <div className=\"post-big\">\n    <Link to={pick(post, 'fields.slug')}>\n      <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      <div className=\"post-big__title\">{pick(post, 'frontmatter.title')}</div>\n      <div className=\"post-big__excerpt\">{pick(post, 'excerpt')}</div>\n    </Link>\n    <div className=\"post-big__footer\">\n      <div className=\"post-big__author\">\n        <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n          <img\n            className=\"post-big__author__avatar\"\n            src={pick(\n              post,\n              'frontmatter.author.avatar.childImageSharp.resize.src'\n            )}\n            alt={pick(post, 'frontmatter.author.nickname')}\n          />\n        </Link>\n        <div className=\"post-big__author__content\">\n          <div className=\"post-big__author__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-big__author__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostBig.propTypes = {\n  post: PropTypes.object,\n};\n\nPostBig.defaultProps = {\n  post: {},\n};\n\nexport const postBigQuery = graphql`\n  fragment PostBig on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              resize(width: 80, height: 80, cropFocus: CENTER) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostBig;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport './post-card.less';\n\nconst PostCard = ({ post }) => {\n  return (\n    <div className=\"post-card\">\n      <div className=\"post-card__header\">\n        <div className=\"post-card__avatar\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            <Img\n              fluid={pick(\n                post,\n                'frontmatter.author.avatar.childImageSharp.fluid'\n              )}\n            />\n          </Link>\n        </div>\n        <div className=\"post-card__info\">\n          <div className=\"post-card__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-card__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}</div>\n          </div>\n        </div>\n      </div>\n      <Link to={pick(post, 'fields.slug')}>\n        <div className=\"post-card__cover\">\n          <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n        </div>\n        <div className=\"post-card__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-card__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n    </div>\n  );\n};\n\nexport const postCardQuery = graphql`\n  fragment PostCard on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              fluid(maxWidth: 80, maxHeight: 80, cropFocus: CENTER) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostCard;\n","import PostSmall from './PostSmall.jsx';\nimport PostBig from './PostBig.jsx';\nimport PostCard from './PostCard.jsx';\n\nexport { PostSmall, PostBig, PostCard };\n"],"sourceRoot":""}