{"version":3,"sources":["webpack:///./src/templates/author/page.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/components/Post/PostSmall.jsx","webpack:///./src/components/Post/PostBig.jsx","webpack:///./src/components/Post/PostCard.jsx","webpack:///./src/components/Post/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_image__WEBPACK_IMPORTED_MODULE_1__","gatsby_image__WEBPACK_IMPORTED_MODULE_1___default","utils_pick__WEBPACK_IMPORTED_MODULE_2__","components_common__WEBPACK_IMPORTED_MODULE_3__","components_Link__WEBPACK_IMPORTED_MODULE_4__","components_Layout__WEBPACK_IMPORTED_MODULE_5__","components_Pagination__WEBPACK_IMPORTED_MODULE_6__","components_Post__WEBPACK_IMPORTED_MODULE_7__","_ref","data","pageContext","author","posts","pick","map","x","node","a","createElement","className","fluid","links","link","key","url","to","icon","post","id","Pagination","next","prev","onPrev","onNext","react_default","gatsby_browser_entry","onClick","PostSmall","gatsby_image_default","propTypes","PropTypes","object","defaultProps","PostBig","src","alt","PostCard","Post_PostSmall","Post_PostBig","Post_PostCard"],"mappings":"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","file":"component---src-templates-author-page-js-3cbfd515c15ebeb6552e.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport { Icon } from 'components/common';\nimport Link from 'components/Link';\nimport Layout from 'components/Layout';\nimport Pagination from 'components/Pagination';\nimport { PostCard } from 'components/Post';\n\nimport './style.less';\n\nexport default ({ data, pageContext }) => {\n  const { author } = data;\n  const posts = pick(data, 'posts.edges').map(x => x.node) || [];\n\n  return (\n    <Layout className=\"author-page\">\n      <div className=\"author-page__content\">\n        <div className=\"author-page__header\">\n          <Img\n            className=\"author-page__avatar\"\n            fluid={pick(author, 'avatar.childImageSharp.fluid')}\n          />\n          <div className=\"author-page__info\">\n            <div className=\"author-page__info-top\">\n              <div className=\"author-page__nickname\">\n                {pick(author, 'nickname')}\n              </div>\n              <div className=\"author-page__slogan\">\n                {pick(author, 'slogan')}\n              </div>\n            </div>\n            <div className=\"author-page__info-bottom\">\n              {(author.links || []).map(link => (\n                <Link\n                  className=\"author-page__link\"\n                  key={link.url}\n                  to={link.url}\n                >\n                  <Icon icon={link.icon} />\n                </Link>\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className=\"author-page__posts\">\n          <div className=\"author-page__posts-title\">Latest</div>\n          {posts.map(post => (\n            <PostCard key={post.id} post={post} />\n          ))}\n        </div>\n        <Pagination {...pageContext} />\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query AuthorPageQuery($posts: [String], $author: String) {\n    posts: allMarkdownRemark(\n      filter: { id: { in: $posts } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          ...PostCard\n        }\n      }\n    }\n    author: authorJson(id: { eq: $author }) {\n      id\n      nickname\n      slogan\n      avatar {\n        ... on File {\n          childImageSharp {\n            fluid(cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      links {\n        icon\n        url\n      }\n    }\n  }\n`;\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './style.less';\n\nexport default ({ next, prev, onPrev, onNext }) =>\n  (prev || next) && (\n    <div className=\"pagination\">\n      <div className=\"pagination__prev\">\n        {prev && (\n          <Link to={prev} onClick={onPrev}>\n            PREV\n          </Link>\n        )}\n      </div>\n      <div className=\"pagination__next\">\n        {next && (\n          <Link to={next} onClick={onNext}>\n            NEXT\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport pick from 'utils/pick';\n\nimport './post-small.less';\nimport Img from 'gatsby-image';\n\nconst PostSmall = ({ post }) => (\n  <div className=\"post-small\">\n    <div className=\"post-small__cover\">\n      <Link to={pick(post, 'fields.slug')}>\n        <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      </Link>\n    </div>\n    <div className=\"post-small__content\">\n      <Link className=\"post-small__content__top\" to={pick(post, 'fields.slug')}>\n        <div className=\"post-small__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-small__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n      <div className=\"post-small__content__bottom\">\n        <div className=\"post-small__author\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            {pick(post, 'frontmatter.author.nickname')}\n          </Link>\n        </div>\n        <div className=\"post-small__external\">\n          <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n          <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostSmall.propTypes = {\n  post: PropTypes.object,\n};\n\nPostSmall.defaultProps = {\n  post: {},\n};\n\nexport const postSmallQuery = graphql`\n  fragment PostSmall on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 500, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n      }\n    }\n  }\n`;\n\nexport default PostSmall;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport pick from 'utils/pick';\n\nimport './post-big.less';\n\nconst PostBig = ({ post }) => (\n  <div className=\"post-big\">\n    <Link to={pick(post, 'fields.slug')}>\n      <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      <div className=\"post-big__title\">{pick(post, 'frontmatter.title')}</div>\n      <div className=\"post-big__excerpt\">{pick(post, 'excerpt')}</div>\n    </Link>\n    <div className=\"post-big__footer\">\n      <div className=\"post-big__author\">\n        <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n          <img\n            className=\"post-big__author__avatar\"\n            src={pick(\n              post,\n              'frontmatter.author.avatar.childImageSharp.resize.src'\n            )}\n            alt={pick(post, 'frontmatter.author.nickname')}\n          />\n        </Link>\n        <div className=\"post-big__author__content\">\n          <div className=\"post-big__author__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-big__author__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostBig.propTypes = {\n  post: PropTypes.object,\n};\n\nPostBig.defaultProps = {\n  post: {},\n};\n\nexport const postBigQuery = graphql`\n  fragment PostBig on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              resize(width: 80, height: 80, cropFocus: CENTER) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostBig;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport './post-card.less';\n\nconst PostCard = ({ post }) => {\n  return (\n    <div className=\"post-card\">\n      <div className=\"post-card__header\">\n        <div className=\"post-card__avatar\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            <Img\n              fluid={pick(\n                post,\n                'frontmatter.author.avatar.childImageSharp.fluid'\n              )}\n            />\n          </Link>\n        </div>\n        <div className=\"post-card__info\">\n          <div className=\"post-card__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-card__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}</div>\n          </div>\n        </div>\n      </div>\n      <Link to={pick(post, 'fields.slug')}>\n        <div className=\"post-card__cover\">\n          <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n        </div>\n        <div className=\"post-card__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-card__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n    </div>\n  );\n};\n\nexport const postCardQuery = graphql`\n  fragment PostCard on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              fluid(maxWidth: 80, maxHeight: 80, cropFocus: CENTER) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostCard;\n","import PostSmall from './PostSmall.jsx';\nimport PostBig from './PostBig.jsx';\nimport PostCard from './PostCard.jsx';\n\nexport { PostSmall, PostBig, PostCard };\n"],"sourceRoot":""}