{"version":3,"sources":["webpack:///./src/components/Outline/Outline.jsx","webpack:///./src/components/Gallery/Gallery.jsx","webpack:///./src/components/Outline/index.js","webpack:///./src/components/Gallery/index.js","webpack:///./src/components/Affix/Affix.jsx","webpack:///./src/components/Affix/index.js","webpack:///./src/templates/post/page.js","webpack:///./src/components/Post/PostSmall.jsx","webpack:///./src/components/Post/PostBig.jsx","webpack:///./src/components/Post/PostCard.jsx","webpack:///./src/components/Post/index.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["Outline","props","_this","_PureComponent","call","this","_handleResize","setState","maxHeight","_getMaxHeight","window","innerHeight","_handleGotoAnchor","_ref","value","location","hash","toLowerCase","replace","state","componentDidMount","on","componentWillUnmount","off","render","_this2","list","react_default","a","createElement","common","positionFixed","namespace","placement","reference","icon","className","style","overflow","map","_ref2","depth","key","data-depth","onMouseDown","PureComponent","propTypes","defaultProps","$root","PADDING","document","getElementById","Gallery","load","$imgs","images","forEach","$img","index","func","e","_handleImageClick","push","src","$imgFuncs","destroy","preventDefault","scrollY","pageYOffset","windowW","innerWidth","windowH","offset","getOffset","entering","top","left","width","height","entered","imgW","imgH","show","curr","_handleExitingGallery","_this$state","waiting","addStyle","opacity","exiting","exited","_handleEnter","body","_handleExited","_renderPortal","_this$state2","image","stateMap","maskMap","visibility","Transition","mountOnEnter","unmountOnExit","in","timeout","onEnter","onExited","onClick","Object","assign","alt","ReactDOM","createPortal","Affix","_useState","useState","setShow","useEffect","handleScroll","animation","requestAnimationFramePolyfill","cls","scrollTop","PostBigInfo","id","fields","excerpt","timeToRead","frontmatter","title","reverse","gatsby_browser_entry","to","slug","gatsby_image_default","fluid","pick","PostPage","_renderComments","post","data","ThemeContext","Consumer","main_default","ref","$disqus","shortname","process","GATSBY_DISQUS_SHORTNAME","identifier","url","href","setTimeout","current","loadDisqus","$content","React","createRef","$gallery","Array","from","getElementsByTagName","prevPost","nextPost","tags","series","headings","Layout","autoHidden","snakke","name","length","tag","dangerouslySetInnerHTML","__html","data-size","Post","components_Outline","components_Gallery","components_Affix","query","PostSmall","PropTypes","object","PostBig","PostCard","__webpack_require__","d","__webpack_exports__","Post_PostSmall","Post_PostBig","Post_PostCard","module","exports","defineProperty","_extends","target","i","arguments","source","prototype","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","nextProps","nextState","reduce","memo","some","config","_defineProperty","child","disqus","parent","async","type","appendChild","_this3","DISQUS","reset","reload","disqus_config","addDisqusScript","displayName","string","isRequired","category_id"],"mappings":"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","file":"component---src-templates-post-page-js-e21059e96788e225b884.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport { on, off } from 'dom-lib';\n\nimport { Icon, Popover } from 'components/common';\n\nimport './style.less';\n\nclass Outline extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      maxHeight: this._getMaxHeight(),\n    };\n  }\n\n  componentDidMount() {\n    on(window, 'resize', this._handleResize);\n  }\n\n  componentWillUnmount() {\n    off(window, 'resize', this._handleResize);\n  }\n\n  _handleResize = () => {\n    this.setState({ maxHeight: this._getMaxHeight() });\n  };\n\n  _getMaxHeight = () => {\n    return typeof window !== 'undefined' ? window.innerHeight - 200 : 200;\n  };\n\n  _handleGotoAnchor = ({ value }) => {\n    window.location.hash = `#${value\n      .toLowerCase()\n      .replace(/\\s+/g, '-')\n      .replace(/\\./g, '')}`;\n  };\n\n  render() {\n    const { maxHeight } = this.state;\n    const { list } = this.props;\n\n    if (maxHeight < 0) return null;\n\n    return (\n      <Popover\n        positionFixed\n        namespace=\"outline\"\n        placement=\"top-start\"\n        reference={<Icon icon=\"menu\" />}\n      >\n        <div\n          className=\"outline__anchor\"\n          style={{ maxHeight, overflow: 'auto' }}\n        >\n          <div className=\"outline__anchor-title\">Outline</div>\n          <div className=\"outline__anchor-list\">\n            {list.map(({ value, depth }) => (\n              <div\n                key={`${depth}-${value}`}\n                className=\"outline__anchor-item\"\n                data-depth={depth}\n                onMouseDown={() => this._handleGotoAnchor({ depth, value })}\n              >\n                {value}\n              </div>\n            ))}\n          </div>\n        </div>\n      </Popover>\n    );\n  }\n}\n\nOutline.propTypes = {};\n\nOutline.defaultProps = {};\n\nexport default Outline;\n","import React, { PureComponent } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Transition } from 'react-transition-group';\nimport { on, off, getOffset, addStyle } from 'dom-lib';\n\nimport './style.less';\n\nconst PADDING = 5;\nlet $root;\n\nif (typeof window !== `undefined`) {\n  $root = document.getElementById('gallery-root');\n}\n\nclass Gallery extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      show: false,\n      curr: 0,\n      images: [],\n\n      entering: {},\n      entered: {},\n      exiting: {},\n      exited: {},\n    };\n\n    this.$imgs = [];\n    this.$imgFuncs = [];\n  }\n\n  load = $imgs => {\n    const images = [];\n\n    this.$imgs = $imgs;\n\n    $imgs.forEach(($img, index) => {\n      const func = e => this._handleImageClick(e, $img, index);\n\n      images.push($img.src);\n\n      this.$imgFuncs.push(func);\n\n      on($img, 'click', func);\n    });\n\n    this.setState({ images });\n  };\n\n  destroy = () => {\n    this.$imgs.forEach(($img, index) => {\n      off($img, 'click', this.$imgFuncs[index]);\n    });\n  };\n\n  _handleImageClick = (e, $img, index) => {\n    e.preventDefault();\n\n    const scrollY = window.scrollY || window.pageYOffset;\n    const windowW = window.innerWidth;\n    const windowH = window.innerHeight;\n    const offset = getOffset($img);\n    const entering = {\n      top: offset.top - scrollY,\n      left: offset.left,\n      width: offset.width,\n      height: offset.height,\n    };\n    let entered = {};\n\n    if (offset.width / offset.height > windowW / windowH) {\n      const imgW = windowW - PADDING * 2;\n      const imgH = (imgW * offset.height) / offset.width;\n\n      entered = {\n        top: (windowH - imgH) / 2,\n        left: PADDING,\n        width: imgW,\n        height: imgH,\n      };\n    } else {\n      const imgH = windowH - PADDING * 2;\n      const imgW = (offset.width / offset.height) * imgH;\n\n      entered = {\n        top: PADDING,\n        left: (windowW - imgW) / 2,\n        width: imgW,\n        height: imgH,\n      };\n    }\n\n    // addStyle($img, { opacity: 0 });\n\n    this.setState({\n      show: true,\n      curr: index,\n      entering,\n      entered,\n    });\n  };\n\n  _handleExitingGallery = e => {\n    const { curr, show } = this.state;\n\n    e.preventDefault();\n\n    if (!show) return;\n    if (this.waiting) return;\n\n    this.waiting = true;\n\n    const $img = this.$imgs[curr];\n    const scrollY = window.scrollY || window.pageYOffset;\n    const offset = getOffset($img);\n\n    addStyle($img, { opacity: 1 });\n\n    this.setState(\n      {\n        show: false,\n        exiting: {\n          top: offset.top - scrollY,\n          left: offset.left,\n          width: offset.width,\n          height: offset.height,\n        },\n        exited: {},\n      },\n      () => (this.waiting = false)\n    );\n  };\n\n  _handleEnter = () => {\n    addStyle(document.body, { overflow: 'hidden' });\n  };\n\n  _handleExited = () => {\n    addStyle(document.body, { overflow: 'auto' });\n  };\n\n  _renderPortal = () => {\n    const {\n      images,\n      curr,\n      show,\n      entering,\n      entered,\n      exiting,\n      exited,\n    } = this.state;\n    const image = images[curr];\n    const stateMap = {\n      entering,\n      entered,\n      exiting,\n      exited,\n    };\n    const maskMap = {\n      entering: {\n        visibility: 'hidden',\n        opacity: 0,\n      },\n      entered: {\n        visibility: 'visible',\n        opacity: 1,\n      },\n      exiting: {\n        visibility: 'hidden',\n        opacity: 0,\n      },\n      exited: {},\n    };\n\n    return (\n      <Transition\n        mountOnEnter\n        unmountOnExit\n        in={show}\n        timeout={300}\n        onEnter={this._handleEnter}\n        onExited={this._handleExited}\n      >\n        {state => (\n          <div className=\"gallery\" onClick={this._handleExitingGallery}>\n            <div className=\"gallery__mask\" style={maskMap[state]} />\n            <img\n              className=\"gallery__preview\"\n              style={{ ...stateMap[state], ...maskMap[state] }}\n              src={image}\n              alt=\"preview\"\n            />\n          </div>\n        )}\n      </Transition>\n    );\n  };\n\n  render() {\n    if (!$root) return null;\n\n    return ReactDOM.createPortal(this._renderPortal(), $root);\n  }\n}\n\nGallery.propTypes = {};\nGallery.defaultProps = {};\n\nexport default Gallery;\n","import Outline from './Outline.jsx';\n\nexport default Outline;\n","import Gallery from './Gallery.jsx';\n\nexport default Gallery;\n","import React, { useState, useEffect } from 'react';\nimport { on, off, animation, scrollTop } from 'dom-lib';\nimport cls from 'classnames';\n\nimport { Icon } from 'components/common';\n\nimport './style.less';\n\nlet waiting = false;\n\nexport default function Affix() {\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    function handleScroll() {\n      if (waiting) return;\n\n      waiting = true;\n\n      animation.requestAnimationFramePolyfill(() => {\n        const scrollY = window.scrollY || window.pageYOffset;\n        const boundary = 0;\n\n        if (scrollY > boundary && !show) {\n          setShow(true);\n          waiting = false;\n\n          return;\n        }\n\n        if (scrollY <= boundary && show) {\n          setShow(false);\n          waiting = false;\n\n          return;\n        }\n\n        waiting = false;\n      });\n    }\n\n    on(window, 'scroll', handleScroll);\n\n    return () => {\n      off(window, 'scroll', handleScroll);\n    };\n  });\n\n  return (\n    <div\n      className={cls(['affix', show && 'affix--show'])}\n      onClick={() => scrollTop(window, 0)}\n    >\n      <Icon icon=\"arrow-up\" />\n    </div>\n  );\n}\n","import Affix from './Affix.jsx';\n\nexport default Affix;\n","import React, { PureComponent } from 'react';\nimport ReactDisqusComments from 'react-disqus-comments';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport cls from 'classnames';\nimport pick from 'utils/pick';\n\nimport Layout from 'components/Layout';\nimport Outline from 'components/Outline';\nimport Gallery from 'components/Gallery';\nimport Affix from 'components/Affix';\nimport ThemeContext from 'components/ThemeContext';\nimport { PostBig } from 'components/Post';\n\nimport 'katex/dist/katex.min.css';\nimport './style.less';\n\nfunction PostBigInfo({\n  id,\n  fields,\n  excerpt,\n  timeToRead,\n  frontmatter,\n  title,\n  reverse,\n}) {\n  return (\n    <div className={cls(['post-page__big-info', reverse && 'reverse'])}>\n      <div className=\"post-page__big-info__cover\">\n        <Link to={fields.slug}>\n          <Img fluid={pick(frontmatter, 'cover.childImageSharp.fluid')} />\n        </Link>\n      </div>\n      <div className=\"post-page__big-info__content\">\n        <div className=\"post-page__big-info__link\">\n          <Link to={fields.slug}>{title}</Link>\n        </div>\n        <Link to={fields.slug}>\n          <div className=\"post-page__big-info__title\">{frontmatter.title}</div>\n          <div className=\"post-page__big-info__desc\">{excerpt}</div>\n        </Link>\n        <div className=\"post-page__big-info__footer\">\n          <div className=\"nickname\">\n            <Link to={`/author/${pick(frontmatter, 'author.id')}`}>\n              {pick(frontmatter, 'author.nickname')}\n            </Link>\n          </div>\n          <div className=\"date\">{pick(frontmatter, 'date')}</div>\n          <div className=\"ttr\">{timeToRead}min read</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default class PostPage extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.$content = React.createRef();\n    this.$gallery = React.createRef();\n    this.$disqus = React.createRef();\n  }\n\n  componentDidMount() {\n    const $content = this.$content.current;\n    const $gallery = this.$gallery.current;\n\n    if (!$content || !$gallery) return;\n\n    $gallery.load(Array.from($content.getElementsByTagName('img')));\n  }\n\n  componentWillUnmount() {\n    const $gallery = this.$gallery.current;\n\n    if (!$gallery) return;\n\n    $gallery.destroy();\n  }\n\n  _renderComments = () => {\n    if (typeof window === 'undefined') return null;\n\n    const { data } = this.props;\n    const { post } = data;\n\n    return (\n      <ThemeContext.Consumer>\n        {() => (\n          <ReactDisqusComments\n            ref={this.$disqus}\n            shortname={process.env.GATSBY_DISQUS_SHORTNAME}\n            identifier={post.id}\n            title={pick(post, 'frontmatter.title')}\n            url={window.location.href}\n          >\n            {setTimeout(\n              () =>\n                this.$disqus &&\n                this.$disqus.current &&\n                this.$disqus.current.loadDisqus(),\n              300\n            )}\n          </ReactDisqusComments>\n        )}\n      </ThemeContext.Consumer>\n    );\n  };\n\n  render() {\n    const { data } = this.props;\n    const { post, prevPost, nextPost } = data;\n    const tags = pick(post, 'frontmatter.tags') || [];\n    const series = pick(post, 'frontmatter.series');\n    const headings = pick(post, 'headings') || [];\n\n    return (\n      <Layout\n        className=\"post-page\"\n        autoHidden\n        snakke\n        title={series && <Link to={`/series/${series.id}`}>{series.name}</Link>}\n      >\n        <div className=\"post-page__header\">\n          <div className=\"post-page__header__content\">\n            {tags.length > 0 && (\n              <div className=\"post-page__header__tags\">\n                {tags.map(tag => (\n                  <span key={tag.id}>\n                    <Link to={`/tag/${tag.id}`}>{tag.name}</Link>\n                  </span>\n                ))}\n              </div>\n            )}\n            <div className=\"post-page__header__title\">\n              {pick(post, 'frontmatter.title')}\n            </div>\n            <div className=\"post-page__header__author\">\n              <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n                <img\n                  className=\"avatar\"\n                  src={pick(\n                    post,\n                    'frontmatter.author.avatar.childImageSharp.resize.src'\n                  )}\n                  alt={pick(post, 'frontmatter.author.nickname')}\n                />\n              </Link>\n              <div className=\"content\">\n                <div className=\"nickname\">\n                  <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n                    {pick(post, 'frontmatter.author.nickname')}\n                  </Link>\n                </div>\n                <div className=\"desc\">\n                  <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n                  <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"post-page__header__cover\">\n            <Img\n              fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')}\n            />\n          </div>\n        </div>\n        <div\n          ref={this.$content}\n          className=\"post-page__content\"\n          dangerouslySetInnerHTML={{ __html: pick(post, 'html') }}\n        />\n        <div className=\"post-page__disqus\">{this._renderComments()}</div>\n        <div data-size=\"normal\" className=\"post-page__footer\">\n          {nextPost && <PostBig post={nextPost} />}\n          {prevPost && <PostBig post={prevPost} />}\n        </div>\n        <div data-size=\"large\" className=\"post-page__footer\">\n          {nextPost && <PostBigInfo {...nextPost} title=\"READ NEXT\" />}\n          {prevPost && (\n            <PostBigInfo {...prevPost} title=\"READ PREV\" reverse={true} />\n          )}\n        </div>\n        <Outline list={headings} />\n        <Gallery ref={this.$gallery} />\n        <Affix />\n      </Layout>\n    );\n  }\n}\n\nexport const query = graphql`\n  fragment PostPageDetail on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              resize(width: 80, height: 80, cropFocus: CENTER) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  query PostPageQuery($id: String, $prevSlug: String, $nextSlug: String) {\n    prevPost: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      ...PostPageDetail\n    }\n    nextPost: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      ...PostPageDetail\n    }\n    post: markdownRemark(id: { eq: $id }) {\n      id\n      fields {\n        slug\n      }\n      html\n      excerpt\n      headings {\n        value\n        depth\n      }\n      timeToRead\n      wordCount {\n        paragraphs\n        sentences\n        words\n      }\n      frontmatter {\n        title\n        cover {\n          ... on File {\n            childImageSharp {\n              fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        date: date(formatString: \"MMM D\")\n        author {\n          id\n          nickname\n          avatar {\n            ... on File {\n              childImageSharp {\n                resize(width: 80, height: 80, cropFocus: CENTER) {\n                  src\n                }\n              }\n            }\n          }\n        }\n        tags {\n          id\n          name\n        }\n        series {\n          id\n          name\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport pick from 'utils/pick';\n\nimport './post-small.less';\nimport Img from 'gatsby-image';\n\nconst PostSmall = ({ post }) => (\n  <div className=\"post-small\">\n    <div className=\"post-small__cover\">\n      <Link to={pick(post, 'fields.slug')}>\n        <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      </Link>\n    </div>\n    <div className=\"post-small__content\">\n      <Link className=\"post-small__content__top\" to={pick(post, 'fields.slug')}>\n        <div className=\"post-small__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-small__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n      <div className=\"post-small__content__bottom\">\n        <div className=\"post-small__author\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            {pick(post, 'frontmatter.author.nickname')}\n          </Link>\n        </div>\n        <div className=\"post-small__external\">\n          <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n          <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostSmall.propTypes = {\n  post: PropTypes.object,\n};\n\nPostSmall.defaultProps = {\n  post: {},\n};\n\nexport const postSmallQuery = graphql`\n  fragment PostSmall on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 500, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n      }\n    }\n  }\n`;\n\nexport default PostSmall;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport pick from 'utils/pick';\n\nimport './post-big.less';\n\nconst PostBig = ({ post }) => (\n  <div className=\"post-big\">\n    <Link to={pick(post, 'fields.slug')}>\n      <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      <div className=\"post-big__title\">{pick(post, 'frontmatter.title')}</div>\n      <div className=\"post-big__excerpt\">{pick(post, 'excerpt')}</div>\n    </Link>\n    <div className=\"post-big__footer\">\n      <div className=\"post-big__author\">\n        <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n          <img\n            className=\"post-big__author__avatar\"\n            src={pick(\n              post,\n              'frontmatter.author.avatar.childImageSharp.resize.src'\n            )}\n            alt={pick(post, 'frontmatter.author.nickname')}\n          />\n        </Link>\n        <div className=\"post-big__author__content\">\n          <div className=\"post-big__author__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-big__author__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostBig.propTypes = {\n  post: PropTypes.object,\n};\n\nPostBig.defaultProps = {\n  post: {},\n};\n\nexport const postBigQuery = graphql`\n  fragment PostBig on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              resize(width: 80, height: 80, cropFocus: CENTER) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostBig;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport './post-card.less';\n\nconst PostCard = ({ post }) => {\n  return (\n    <div className=\"post-card\">\n      <div className=\"post-card__header\">\n        <div className=\"post-card__avatar\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            <Img\n              fluid={pick(\n                post,\n                'frontmatter.author.avatar.childImageSharp.fluid'\n              )}\n            />\n          </Link>\n        </div>\n        <div className=\"post-card__info\">\n          <div className=\"post-card__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-card__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}</div>\n          </div>\n        </div>\n      </div>\n      <Link to={pick(post, 'fields.slug')}>\n        <div className=\"post-card__cover\">\n          <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n        </div>\n        <div className=\"post-card__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-card__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n    </div>\n  );\n};\n\nexport const postCardQuery = graphql`\n  fragment PostCard on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              fluid(maxWidth: 80, maxHeight: 80, cropFocus: CENTER) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostCard;\n","import PostSmall from './PostSmall.jsx';\nimport PostBig from './PostBig.jsx';\nimport PostCard from './PostCard.jsx';\n\nexport { PostSmall, PostBig, PostCard };\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}