{"version":3,"sources":["webpack:///./src/templates/tag/page.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/Pagination/Pagination.jsx","webpack:///./src/components/Post/PostSmall.jsx","webpack:///./src/components/Post/PostBig.jsx","webpack:///./src/components/Post/PostCard.jsx","webpack:///./src/components/Post/index.js"],"names":["__webpack_exports__","_ref","data","pageContext","tag","posts","pick","map","x","node","header","list","slice","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","components_Layout__WEBPACK_IMPORTED_MODULE_7__","title","name","className","react_media__WEBPACK_IMPORTED_MODULE_2__","query","matches","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fluid","description","links","link","components_Link__WEBPACK_IMPORTED_MODULE_6__","key","url","to","components_common__WEBPACK_IMPORTED_MODULE_5__","icon","components_Post__WEBPACK_IMPORTED_MODULE_9__","post","id","components_Pagination__WEBPACK_IMPORTED_MODULE_8__","Pagination","next","prev","onPrev","onNext","react_default","gatsby_browser_entry","onClick","PostSmall","gatsby_image_default","propTypes","PropTypes","object","defaultProps","PostBig","src","alt","PostCard","__webpack_require__","d","Post_PostSmall","Post_PostBig","Post_PostCard"],"mappings":"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","file":"component---src-templates-tag-page-js-f0b1302529fc078f3f39.js","sourcesContent":["import React from 'react';\nimport Media from 'react-media';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport { Icon } from 'components/common';\nimport Link from 'components/Link';\nimport Layout from 'components/Layout';\nimport Pagination from 'components/Pagination';\nimport { PostBig, PostSmall } from 'components/Post';\n\nimport './style.less';\n\nexport default ({ data, pageContext }) => {\n  const { tag } = data;\n  const posts = pick(data, 'posts.edges').map(x => x.node) || [];\n  const header = posts[0];\n  const list = posts.slice(1);\n\n  return (\n    <Layout title={tag.name} className=\"tag-page\">\n      <div className=\"tag-page__content\">\n        <div className=\"tag-page__posts\">\n          <Media query=\"(max-width: 768px)\">\n            {matches =>\n              matches && (\n                <div className=\"tag-page__section\">\n                  <Img\n                    className=\"tag-page__logo\"\n                    fluid={pick(tag, 'cover.childImageSharp.fluid')}\n                  />\n                  <div className=\"tag-page__title\">{tag.name}</div>\n                  <div className=\"tag-page__desc\">{tag.description}</div>\n                  <div className=\"tag-page__links\">\n                    {(tag.links || []).map(link => (\n                      <Link\n                        className=\"tag-page__link\"\n                        key={link.url}\n                        to={link.url}\n                      >\n                        <Icon icon={link.icon} />\n                      </Link>\n                    ))}\n                  </div>\n                </div>\n              )\n            }\n          </Media>\n          <div className=\"tag-page__header-post\">\n            {posts[0] && <PostBig post={header} />}\n          </div>\n          <div className=\"tag-page__post-list\">\n            {list.map(post => (\n              <PostSmall key={post.id} post={post} />\n            ))}\n          </div>\n          <Pagination {...pageContext} />\n        </div>\n        <Media query=\"(max-width: 768px)\">\n          {matches =>\n            !matches && (\n              <div className=\"tag-page__section\">\n                <Img\n                  className=\"tag-page__logo\"\n                  fluid={pick(tag, 'cover.childImageSharp.fluid')}\n                />\n                <div className=\"tag-page__title\">{tag.name}</div>\n                <div className=\"tag-page__desc\">{tag.description}</div>\n                <div className=\"tag-page__links\">\n                  {(tag.links || []).map(link => (\n                    <Link\n                      className=\"tag-page__link\"\n                      key={link.url}\n                      to={link.url}\n                    >\n                      <Icon icon={link.icon} />\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            )\n          }\n        </Media>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query TagPageQuery($posts: [String], $tag: String) {\n    posts: allMarkdownRemark(\n      filter: { id: { in: $posts } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          ...PostBig\n        }\n      }\n    }\n    tag: tagJson(id: { eq: $tag }) {\n      id\n      name\n      description\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      links {\n        icon\n        url\n      }\n    }\n  }\n`;\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './style.less';\n\nexport default ({ next, prev, onPrev, onNext }) =>\n  (prev || next) && (\n    <div className=\"pagination\">\n      <div className=\"pagination__prev\">\n        {prev && (\n          <Link to={prev} onClick={onPrev}>\n            PREV\n          </Link>\n        )}\n      </div>\n      <div className=\"pagination__next\">\n        {next && (\n          <Link to={next} onClick={onNext}>\n            NEXT\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\nimport PropTypes from 'prop-types';\n\nimport pick from 'utils/pick';\n\nimport './post-small.less';\nimport Img from 'gatsby-image';\n\nconst PostSmall = ({ post }) => (\n  <div className=\"post-small\">\n    <div className=\"post-small__cover\">\n      <Link to={pick(post, 'fields.slug')}>\n        <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      </Link>\n    </div>\n    <div className=\"post-small__content\">\n      <Link className=\"post-small__content__top\" to={pick(post, 'fields.slug')}>\n        <div className=\"post-small__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-small__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n      <div className=\"post-small__content__bottom\">\n        <div className=\"post-small__author\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            {pick(post, 'frontmatter.author.nickname')}\n          </Link>\n        </div>\n        <div className=\"post-small__external\">\n          <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n          <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostSmall.propTypes = {\n  post: PropTypes.object,\n};\n\nPostSmall.defaultProps = {\n  post: {},\n};\n\nexport const postSmallQuery = graphql`\n  fragment PostSmall on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 500, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n      }\n    }\n  }\n`;\n\nexport default PostSmall;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport PropTypes from 'prop-types';\nimport pick from 'utils/pick';\n\nimport './post-big.less';\n\nconst PostBig = ({ post }) => (\n  <div className=\"post-big\">\n    <Link to={pick(post, 'fields.slug')}>\n      <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n      <div className=\"post-big__title\">{pick(post, 'frontmatter.title')}</div>\n      <div className=\"post-big__excerpt\">{pick(post, 'excerpt')}</div>\n    </Link>\n    <div className=\"post-big__footer\">\n      <div className=\"post-big__author\">\n        <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n          <img\n            className=\"post-big__author__avatar\"\n            src={pick(\n              post,\n              'frontmatter.author.avatar.childImageSharp.resize.src'\n            )}\n            alt={pick(post, 'frontmatter.author.nickname')}\n          />\n        </Link>\n        <div className=\"post-big__author__content\">\n          <div className=\"post-big__author__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-big__author__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}min read</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPostBig.propTypes = {\n  post: PropTypes.object,\n};\n\nPostBig.defaultProps = {\n  post: {},\n};\n\nexport const postBigQuery = graphql`\n  fragment PostBig on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              resize(width: 80, height: 80, cropFocus: CENTER) {\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostBig;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport pick from 'utils/pick';\n\nimport './post-card.less';\n\nconst PostCard = ({ post }) => {\n  return (\n    <div className=\"post-card\">\n      <div className=\"post-card__header\">\n        <div className=\"post-card__avatar\">\n          <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n            <Img\n              fluid={pick(\n                post,\n                'frontmatter.author.avatar.childImageSharp.fluid'\n              )}\n            />\n          </Link>\n        </div>\n        <div className=\"post-card__info\">\n          <div className=\"post-card__nickname\">\n            <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n              {pick(post, 'frontmatter.author.nickname')}\n            </Link>\n          </div>\n          <div className=\"post-card__external\">\n            <div className=\"date\">{pick(post, 'frontmatter.date')}</div>\n            <div className=\"ttr\">{pick(post, 'timeToRead')}</div>\n          </div>\n        </div>\n      </div>\n      <Link to={pick(post, 'fields.slug')}>\n        <div className=\"post-card__cover\">\n          <Img fluid={pick(post, 'frontmatter.cover.childImageSharp.fluid')} />\n        </div>\n        <div className=\"post-card__title\">\n          {pick(post, 'frontmatter.title')}\n        </div>\n        <div className=\"post-card__excerpt\">{pick(post, 'excerpt')}</div>\n      </Link>\n    </div>\n  );\n};\n\nexport const postCardQuery = graphql`\n  fragment PostCard on MarkdownRemark {\n    id\n    fields {\n      slug\n    }\n    excerpt\n    timeToRead\n    frontmatter {\n      title\n      cover {\n        ... on File {\n          childImageSharp {\n            fluid(maxWidth: 1200, maxHeight: 500, cropFocus: CENTER) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      date: date(formatString: \"MMM D\")\n      author {\n        id\n        nickname\n        avatar {\n          ... on File {\n            childImageSharp {\n              fluid(maxWidth: 80, maxHeight: 80, cropFocus: CENTER) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PostCard;\n","import PostSmall from './PostSmall.jsx';\nimport PostBig from './PostBig.jsx';\nimport PostCard from './PostCard.jsx';\n\nexport { PostSmall, PostBig, PostCard };\n"],"sourceRoot":""}