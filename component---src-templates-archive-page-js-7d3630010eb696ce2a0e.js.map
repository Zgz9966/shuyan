{"version":3,"sources":["webpack:///./src/templates/archive/page.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/Pagination/Pagination.jsx"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","utils_pick__WEBPACK_IMPORTED_MODULE_2__","components_Layout__WEBPACK_IMPORTED_MODULE_3__","components_Pagination__WEBPACK_IMPORTED_MODULE_4__","_ref","data","pageContext","posts","pick","map","x","node","yearsMap","years","forEach","post","year","push","a","createElement","className","_ref2","key","id","to","Pagination","next","prev","onPrev","onNext","react_default","gatsby_browser_entry","onClick"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAA,EAAA,KASeE,EAAA,iBAAAU,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAChBC,EAAQC,YAAKH,EAAM,eAAeI,IAAI,SAAAC,GAAC,OAAIA,EAAEC,QAAS,GACtDC,EAAW,GACbC,EAAQ,GAeZ,OAbAN,EAAMO,QAAQ,SAAAC,GACZ,IAAMC,EAAOR,YAAKO,EAAM,oBAEnBH,EAASI,KACZJ,EAASI,GAAQ,GACjBH,EAAMI,KAAKD,IAGbJ,EAASI,GAAMC,KAAKF,KAGtBF,EAAQA,EAAMJ,IAAI,SAAAO,GAAI,MAAK,CAAEA,OAAMT,MAAOK,EAASI,MAGjDlB,EAAAoB,EAAAC,cAACjB,EAAA,EAAD,CAAQkB,UAAU,gBAChBtB,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,yBACZP,EAAMJ,IAAI,SAAAY,GAAA,IAAGL,EAAHK,EAAGL,KAAMT,EAATc,EAASd,MAAT,OACTT,EAAAoB,EAAAC,cAAA,OAAKG,IAAKN,EAAMI,UAAU,sBACxBtB,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,6BAA6BJ,GAC3CT,EAAME,IAAI,SAAAM,GAAI,OACbjB,EAAAoB,EAAAC,cAAA,OAAKG,IAAKP,EAAKQ,GAAIH,UAAU,sBAC3BtB,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,4BACZZ,YAAKO,EAAM,qBAEdjB,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,6BACbtB,EAAAoB,EAAAC,cAACnB,EAAA,EAAD,CAAMwB,GAAIhB,YAAKO,EAAM,gBAClBP,YAAKO,EAAM,uBAGhBjB,EAAAoB,EAAAC,cAAA,OAAKC,UAAU,8BACbtB,EAAAoB,EAAAC,cAACnB,EAAA,EAAD,CAAMwB,GAAE,WAAahB,YAAKO,EAAM,0BAC7BP,YAAKO,EAAM,uCAOxBjB,EAAAoB,EAAAC,cAAChB,EAAA,EAAeG,MAMjB,IAAMV,EAAK,mFCxDH6B,ICGA,SAAArB,GAAA,IAAGsB,EAAHtB,EAAGsB,KAAMC,EAATvB,EAASuB,KAAMC,EAAfxB,EAAewB,OAAQC,EAAvBzB,EAAuByB,OAAvB,OACZF,GAAQD,IACPI,EAAAZ,EAAAC,cAAA,OAAKC,UAAU,cACbU,EAAAZ,EAAAC,cAAA,OAAKC,UAAU,oBACZO,GACCG,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAMP,GAAIG,EAAMK,QAASJ,GAAzB,SAKJE,EAAAZ,EAAAC,cAAA,OAAKC,UAAU,oBACZM,GACCI,EAAAZ,EAAAC,cAACY,EAAA,EAAD,CAAMP,GAAIE,EAAMM,QAASH,GAAzB","file":"component---src-templates-archive-page-js-7d3630010eb696ce2a0e.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport pick from 'utils/pick';\n\nimport Layout from 'components/Layout';\nimport Pagination from 'components/Pagination';\n\nimport './style.less';\n\nexport default ({ data, pageContext }) => {\n  const posts = pick(data, 'posts.edges').map(x => x.node) || [];\n  const yearsMap = {};\n  let years = [];\n\n  posts.forEach(post => {\n    const year = pick(post, 'frontmatter.year');\n\n    if (!yearsMap[year]) {\n      yearsMap[year] = [];\n      years.push(year);\n    }\n\n    yearsMap[year].push(post);\n  });\n\n  years = years.map(year => ({ year, posts: yearsMap[year] }));\n\n  return (\n    <Layout className=\"archive-page\">\n      <div className=\"archive-page__content\">\n        {years.map(({ year, posts }) => (\n          <div key={year} className=\"archive-page__year\">\n            <div className=\"archive-page__year__title\">{year}</div>\n            {posts.map(post => (\n              <div key={post.id} className=\"archive-page__post\">\n                <div className=\"archive-page__post__date\">\n                  {pick(post, 'frontmatter.date')}\n                </div>\n                <div className=\"archive-page__post__title\">\n                  <Link to={pick(post, 'fields.slug')}>\n                    {pick(post, 'frontmatter.title')}\n                  </Link>\n                </div>\n                <div className=\"archive-page__post__author\">\n                  <Link to={`/author/${pick(post, 'frontmatter.author.id')}`}>\n                    {pick(post, 'frontmatter.author.nickname')}\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        ))}\n        <Pagination {...pageContext} />\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query ArchivePageQuery($posts: [String]) {\n    posts: allMarkdownRemark(\n      filter: { id: { in: $posts } }\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          excerpt\n          frontmatter {\n            title\n            year: date(formatString: \"YYYY\")\n            date: date(formatString: \"MMM D\")\n            author {\n              id\n              nickname\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n","import Pagination from './Pagination.jsx';\n\nexport default Pagination;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport './style.less';\n\nexport default ({ next, prev, onPrev, onNext }) =>\n  (prev || next) && (\n    <div className=\"pagination\">\n      <div className=\"pagination__prev\">\n        {prev && (\n          <Link to={prev} onClick={onPrev}>\n            PREV\n          </Link>\n        )}\n      </div>\n      <div className=\"pagination__next\">\n        {next && (\n          <Link to={next} onClick={onNext}>\n            NEXT\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n"],"sourceRoot":""}